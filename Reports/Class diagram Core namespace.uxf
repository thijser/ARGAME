<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>40</y>
      <w>300</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>LaserBeam
style=autoresize
--
- emitter : LaserEmitter
--
+ LaserBeam(Vector3, Vector3, LaserEmitter)

+ Origin : Vector3
+ Direction : Quaternion
+ Endpoint : Vector3

+ Create()
+ FindReceiver() : HitEventArgs
+ Extend(Vector3, Quaternion) : LaserBeam</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>580</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Mirror :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
+ OnLaserHit(object, HitEventArgs) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>40</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>LaserEmitter :: MonoBehaviour
style=autoresize
--
- segments: List&lt;LaserBeam&gt;
--
+ LineRenderer : LineRenderer
+ Update()

+ Clear()
+ MakeLaser()
+ Render()

+ AddLaser(LaserBeam)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>330</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/ILaserReceiver/
style=autoresize
--
+ OnLaserHit(object, HitEventArgs)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>580</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>LaserTarget :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
+ OnLaserHit(object, HitEventArgs) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>300</x>
      <y>40</y>
      <w>220</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;
m1=1
m2=*</panel_attributes>
    <additional_attributes>30;30;200;30</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>40</y>
      <w>240</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>HitEventArgs :: EventArgs
style=autoresize
--
+ HitEventArgs()
+ HitEventArgs(LaserBeam, Vector3, 
               Vector3, ILaserReceiver)

+ Laser : LaserBeam
+ Normal : Vector3
+ Point : Vector3
+ Receiver : ILaserReceiver

+ IsValid : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>290</y>
      <w>400</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>MultiEmitter :: MonoBehaviour
style=autoresize
--
+ DisableEmittersEachFrame : bool
+ Emitters : LaserEmitter[]

+ ApplyProperties(LineRenderer, LaserBeam) : LineRenderer
+ DisableAll()
+ DeleteAll()
+ GetEmitter(LaserBeam) : LaserEmitter
+ CreateEmitter(LaserBeam) : LaserEmitter

+ LateUpdate()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>190</x>
      <y>200</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=  *
m2= 1</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Package</type>
    <coordinates>
      <x>470</x>
      <y>0</y>
      <w>1070</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Core</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Package</type>
    <coordinates>
      <x>0</x>
      <y>530</y>
      <w>1540</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>Core.Receiver</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>250</y>
      <w>210</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>LaserProperties
style=autoresize
--
+ RGBStrengths : Vector3
+ LineRenderer : LineRenderer

+ LaserColor : Color
+ Strength : float

+ Update()
+ UpdateBeam()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Package</type>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>450</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Core.Emitter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>130</x>
      <y>370</y>
      <w>490</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>470;30;470;200;30;200;30;210</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>370</x>
      <y>370</y>
      <w>250</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>230;30;230;200;30;200;30;210</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>830</x>
      <y>590</y>
      <w>270</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>AndGate :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
- hit : bool
- beamcreated : bool
- lasers : IList&lt;LaserBeam&gt;
--
+ CreateBeam(LaserBeam) : LaserBeam
+ OnLaserHit(object, HitEventArgs)
+ LateUpdate()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>570</x>
      <y>370</y>
      <w>430</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;200;410;200;410;220</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1210</x>
      <y>590</y>
      <w>240</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>BeamSplitter :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
- protoEmitter : GameObject
- emitterPool : List&lt;GameObject&gt;
- nextEmitterIndex : int
--
+ Start()
+ CreateNextEmitter() : GameObject
+ OnLaserHit(object, HitEventArgs) 
+ LateUpdate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>570</x>
      <y>370</y>
      <w>780</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;200;760;200;760;220</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10</x>
      <y>700</y>
      <w>270</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>OrGate :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
- beamcreated : false
--
+ CreateBeam(LaserBeam) : LaserBeam
+ OnLaserHit(object, HitEventArgs) 
+ LateUpdate()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>120</x>
      <y>370</y>
      <w>500</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>480;30;480;310;30;310;30;330</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>700</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Portal :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
+ LinkedPortal : Portal
+ PortalEmitter : MultiEmitter
+ SurfaceNormal : Vector3

+ Start()
+ EmitLaserBeam(LaserBeam, Vector3, Vector3)
+ OnLaserHit(object, HitEventArgs) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>420</x>
      <y>370</y>
      <w>200</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>180;30;180;310;30;310;30;330</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>250</y>
      <w>240</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>TargetColorPicker :: MonoBehaviour
style=autoresize
--
+ Color : Color
--
+ Update()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>570</x>
      <y>370</y>
      <w>310</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;310;110;310;110;410;290;410;290;420</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>790</y>
      <w>240</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Checkpoint :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
+ PassThroughEmitter : MultiEmitter
+ Hit : bool

+ Start()
+ Reset()
+ OnLaserHit(object, HitEventArgs) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>790</y>
      <w>230</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>LensSplitter :: MonoBehaviour
/implements ILaserReceiver/
style=autoresize
--
- focusPoint : Transform
- outLeft : GameObject
- outRight : GameObject
- hit : bool
- rgbStrengths : Vector3
--
+ Start()
+ OnLaserHit(object, HitEventArgs) 
+ LateUpdate()
+ IsHit() : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>570</x>
      <y>370</y>
      <w>560</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;310;110;310;110;410;540;410;540;420</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>970</x>
      <y>250</y>
      <w>290</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>BoardResizer :: MonoBehaviour
style=autoresize
--
+ OnServerUpdate(update : AbstractUpdate)
+ UpdateBoardSize(size : Vector2)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>970</x>
      <y>330</y>
      <w>250</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>CollisionBehaviour :: MonoBehaviour
style=autoresize
--
+ Colliding : bool

+ Start()
+ Update()
+ OnCollisionEnter(coll : Collision)
+ OnCollisionExit(coll : Collision)
+ SetEnableBehaviours(enable : bool)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1060</x>
      <y>40</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>WinCondition :: MonoBehaviour
style=autoresize
--
+ NextLevelIndex : int
--
+ Targets : LaserTarget[]
+ Checks: Checkpoint[]

+ Start()
+ LateUpdate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>130</y>
      <w>230</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>MirrorController :: MonoBehaviour
style=autoresize
--
+ Highlight : Material
+ Original : Material

- selected : bool
--
+ SelectedMirror : Mirror

+ Start()
+ Update()
+ SendRotationUpdate()
- UpdateSelectedMirror()
- Rotate()
- HighlightMirror(Mirror)
- ResetHighlight(Mirror)</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
